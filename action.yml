name: ASTDiff Bot
description: A GitHub Action to run RefactoringMiner and upload diff results as a .zip.
branding:
  icon: anchor
  color: blue

inputs:
  URL:
    description: 'URL of the repository for the diff operation'
    required: true
  deploy:
    description: 'Enable deployment process (true or false)'
    required: false
  deployToken:
    description: 'OAuthToken for writing into gh pages'
    required: false
  deployPrefix:
    description: 'Prefix Path of deployment'
    required: false
    default: "cache"
  OAuthToken:
    description: 'OAuthToken for read the commit/pr information (Only required for private urls)'
    required: false
    default: ${{ github.token }}
  
outputs:
  artifact_url:
    description: 'URL to download the generated diff artifact'
    value: ${{ steps.upload_artifact.outputs.artifact-url }}

runs:
  using: 'composite'
  

  steps:
  
    # Step 1: Checkout the repository (in case we need it for any reason)
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Pull the latest RefactoringMiner Docker image from Docker Hub
    - name: Pull RefactoringMiner Docker image
      run: docker pull tsantalis/refactoringminer:latest
      shell: bash 

    # Step 4: Run Docker container with RefactoringMiner
    - name: Run RefactoringMiner to generate diff
      run: |
        mkdir -p ${{ github.workspace }}/exportedFromDocker
        docker run \
          --env OAuthToken="${{ inputs.OAuthToken }}" \
          -v ${{ github.workspace }}/exportedFromDocker:/diff/exported \
          --entrypoint "" \
          tsantalis/refactoringminer:latest /bin/sh -c "\
            refactoringminer diff --url \"${{ inputs.URL }}\" -e && \
            unzip /opt/refactoringminer/lib/RefactoringMiner-DockerBuild.jar -d /tmp/refactoringminer &&
            mkdir -p /diff/exported/web && \
            cp -r /tmp/refactoringminer/web /diff/exported/web/resources"
      shell: bash 

    # Step 5: Create zip artifact of diff results
    - name: Create zip artifact of diff results
      run: |
        cd ${{ github.workspace }}/exportedFromDocker
        zip -r diff_results.zip .
      shell: bash 

    # Step 6: Upload the zip artifact as an output
    - name: Upload diff results as artifact
      id: upload_artifact
      uses: actions/upload-artifact@v4
      with:
        name: diff_results
        path: ${{ github.workspace }}/exportedFromDocker/diff_results.zip 
    
    # Step 7: Set output variable for artifact URL
    - name: Set artifact URL output
      run: echo "::set-output name=artifact_url::${{ steps.upload_artifact.outputs.artifact-url }}"
      shell: bash
      
    - name: Debug
      run: |
        echo ${{inputs.deploy}}
        echo "\n"
        echo ${{ inputs.deploy == true }}
        echo "\n"
        echo "abalfazl"
      shell: bash

    - name: Deploy
      if: ${{ inputs.deploy == true }}
      id: deploy
      uses: ./.github/actions/deploy  # Use the path to your action
      with:
        commit_url: ${{inputs.commit_url}}
        artifact_url: ${{ steps.upload_artifact.outputs.artifact-url }}
        deploy_prefix: ${{inputs.deployPrefix}}
        deploy_token: ${{inputs.deployToken}}

    - name: Set output from deploy action
      if: ${{ inputs.deploy == true }}
      run: echo "::set-output name=deploy_url::${{ steps.deploy.outputs.deploy_url }}"
      shell: bash

    
